{"mappings":"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","sources":["src/index.ts","src/events/newRequest.ts","src/utils/tracker.ts","src/events/pageView.ts","src/events/searchBox.ts","src/utils/getPageData.ts"],"sourcesContent":["import newRequest from './events/newRequest';\nimport pageView from './events/pageView';\nimport searchBox from './events/searchBox';\nimport getPageData from './utils/getPageData';\n\ndeclare global {\n  interface Window {\n    GTM_ID: string;\n    dataLayer: any[];\n  }\n}\n\n// The GTM unique ID to use\nconst GTM_ID_DEV = 'GTM-NZXZZXN';\nconst GTM_ID_PROD = 'GTM-KFLTKXP';\n\nconst GTM_ID = process.env.NODE_ENV === 'production' ? GTM_ID_PROD : GTM_ID_DEV;\n\n// Google Tag Manager\n(function (w, d, s, l, i) {\n  w[l] = w[l] || [];\n  w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' });\n  var f = d.getElementsByTagName(s)[0],\n    j = d.createElement(s) as HTMLScriptElement,\n    dl = l != 'dataLayer' ? '&l=' + l : '';\n  j.async = true;\n  j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n  j.onload = () => {\n    // logInfo(\"GTM loaded\");\n    if (document.readyState === 'complete') {\n      __init__();\n    } else {\n      window.addEventListener('load', __init__);\n    }\n  };\n  f.parentNode && f.parentNode.insertBefore(j, f);\n})(window, document, 'script', 'dataLayer', GTM_ID);\n// End Google Tag Manager\n\n// init function to be called when the page is loaded\nfunction __init__() {\n  const pageData = getPageData();\n\n  pageView(pageData);\n  searchBox(pageData);\n  newRequest(pageData);\n\n  // This is not needed for now\n  // outboundLink(pageData);\n}\n","import { BASE_DATA } from \"../utils/getPageData\";\nimport tracker from \"../utils/tracker\";\n\nexport default (data: BASE_DATA) => {\n  const form = document.getElementById(\"new_request\") as HTMLFormElement;\n\n  if (!form) return;\n\n  const submitButton = form.querySelector(\n    \"input[type='submit']\"\n  ) as HTMLButtonElement;\n\n  if (submitButton) {\n    form.addEventListener(\"submit\", (e) => {\n      tracker({\n        ...data,\n        event: \"contact_enquired\",\n      });\n    });\n  }\n};\n","export default (data) => {\n  window.dataLayer.push(data);\n};\n","import { BASE_DATA } from \"../utils/getPageData\";\nimport tracker from \"../utils/tracker\";\n\nexport default (data: BASE_DATA) => {\n  tracker({\n    ...data,\n    event: \"page_viewed\",\n  });\n};\n","import { BASE_DATA } from \"../utils/getPageData\";\nimport tracker from \"../utils/tracker\";\n\nexport default (data: BASE_DATA) => {\n  const searchBox = document.getElementById(\"query\") as HTMLInputElement;\n\n  if (searchBox) {\n    const form = searchBox.closest(\"form\");\n\n    form.addEventListener(\"submit\", (e) => {\n      tracker({\n        ...data,\n        search_keyword: searchBox.value,\n        search_type: \"site_search\",\n        event: \"content_searched\",\n      });\n    });\n  }\n};\n","interface BASE_DATA {\n  crn?: string;\n  customer_id?: string;\n  page_language: string;\n  login_status: \"logged_in\" | \"guest\";\n}\n\nconst baseData: BASE_DATA = {\n  crn: null,\n  customer_id: null,\n  page_language: document.documentElement.lang.split(\"-\")[0], // navigator.language.split(\"-\")[0],\n  login_status: \"guest\",\n};\nexport default (): BASE_DATA => {\n  const dataDiv: HTMLDivElement = document.querySelector(\"#__za_data__\");\n  const data = Array.from(dataDiv.children).reduce<Record<string, string>>(\n    (acc, el) => {\n      const element = el as HTMLElement;\n      const value = element.innerText;\n      if (value) {\n        acc[el.id] = value;\n      }\n      return acc;\n    },\n    {}\n  );\n  const { __user_name__, ...rest } = data;\n\n  return {\n    ...baseData,\n    login_status: __user_name__ ? \"logged_in\" : \"guest\",\n  };\n};\n\nexport type { BASE_DATA };\n"],"names":[],"version":3,"file":"script.js.map"}